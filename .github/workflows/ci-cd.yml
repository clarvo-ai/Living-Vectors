name: CI/CD - lv-web (Test + Deploy to Cloud Run)

# ------------------------
# 1. PR: Test, Lint, Build
# 2. Push to dev: Deploy
# ------------------------

on:
  pull_request:
    branches: [dev]
  push:
    branches: [dev, feature/ci-setup-aari]
  workflow_dispatch:

jobs:
  # Job 1: Test & Lint (on PR)
  test:
    # if: github.event_name == 'pull_request'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install dependencies
        run: npm install

      - name: Lint
        run: npx turbo run lint --filter=lv-web || echo "Lint failed"

      - name: Type check
        run: npx turbo run type-check --filter=lv-web

      - name: Unit tests
        run: npx turbo run test --filter=lv-web

      - name: Build check
        run: npx turbo run build --filter=lv-web -- --no-lint

  # Job 2: Deploy (only on push to dev)
  deploy:
    needs: test # Only deploy if test passed
    if: github.ref == 'refs/heads/dev' && github.event_name == 'push'
    runs-on: ubuntu-latest
    steps:
      # 2.1. Get the code
      - name: Checkout code
        uses: actions/checkout@v4

      # 2.2. Login to google Cloud
      - name: Authenticate to GCP
        uses: google-github-actions/auth@v2
        with:
          credentials_json: ${{ secrets.GCP_SA_KEY }}

      # 2.3. Install Google Cloud tools
      - name: Set up Cloud SDK
        uses: google-github-actions/setup-gcloud@v2

      # 2.4. Allow Docker to push to Artifact Registry
      - name: Configure Docker for Artifact Registry
        run: gcloud auth configure-docker europe-north1-docker.pkg.dev

      # 2.5. Build & Push to Docker image
      - name: Build and Push Docker Image
        run: |
          IMAGE="europe-north1-docker.pkg.dev/SWP-LivingVectors/lv-registry/lv-web:latest"
          docker build -t $IMAGE ./apps/lv-web
          docker push $IMAGE

      # 2.6. Deploy to Cloud Run
      - name: Deploy to Cloud Run
        run: |
          gcloud run deploy lv-web \
            --image=$IMAGE \
            --region=europe-north1 \
            --platform=managed \
            --allow-unauthenticated \
            --port=8080 \
            --quiet
